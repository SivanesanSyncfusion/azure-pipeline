# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
trigger:
  - none

pool:
  vmImage: ubuntu-latest

parameters:
  - name:  git_commit
    displayName: Git Package commit
    type: string
    values:
      - False
      - True
  - name: package_link
    displayName: Azure Package URL
    type: string

  - name: repository
    displayName: Repository-URL
    type: string

  - name: branch
    displayName: Branch
    type: string

  - name: git_user_email
    displayName: Git User Email
    type: string

  - name: git_user_name
    displayName: Git User Name
    type: string


  - name:  azure_deployment_upgrade
    displayName: Azure APP Service upgrade
    type: string
    values:
      - False
      - True

variables:
- name: AzureUpgrade
  value: ${{parameters.azure_deployment_upgrade}}

- name: GitCommit
  value: ${{parameters.git_commit}}
steps:

      - ${{ if eq(variables.GitCommit, True) }}:
        - task: Bash@3
          inputs:
            targetType: 'inline'
            script: |
              echo "$(pwd)"
              wget --no-check-certificate '${{parameters.package_link}}'
              unzip Bold*
              ls
              # Check if the branch exists
              echo "$(pwd)"
              if git ls-remote --heads '${{parameters.repository}}' '${{parameters.branch}}' | grep -q '${{parameters.branch}}'; then
                # If the branch exists, clone the repository and switch to the branch
                git clone -b '${{parameters.branch}}' '${{parameters.repository}}' azure-boldbi
                cd azure-boldbi
                echo "$(pwd)"
              else
                # If the branch doesn't exist, create it, clone the repository and switch to the branch
                git clone '${{parameters.repository}}' azure-boldbi
                cd azure-boldbi
                git checkout -b '${{parameters.branch}}'
              fi

              # Copy the files and folders to the cloned location
              #cp git.sh $folder
              echo "$(pwd)"
              cp -r /home/vsts/work/1/s/Bold*/* /home/vsts/work/1/s/azure-boldbi
              echo "$(pwd)"
              rm -r azure.yml
              rm -r ClientLibraries/install-optional.libs..ps1
              git config user.email "${{parameters.git_user_email}}"
              git config user.name "${{parameters.git_user_name}}"

              # Commit and push the changes
              git add .
              git commit -m "Latest packages update"
              git push origin '${{parameters.branch}}'
              ls
      - ${{ else }}:
        - script: echo "Azure package GitHub action not triggered"

      - ${{ if eq(variables.AzureUpgrade, True) }}:

        - task: AzureCLI@2
          inputs:
            azureSubscription: 'SF3362-BoldBI-DevOps-SivanesanSaravanan(bbceebb1-216e-46f8-82c1-500bdea55db4)'
            scriptType: 'bash'
            scriptLocation: 'inlineScript'
            inlineScript: |
              # stop the azure app service
                az webapp stop --name azure-siva-arm --resource-group sivanew
                sleep 60
                echo "App service stopped" 
              # Remove the external repository details in Deployment center
                az webapp deployment source delete --name azure-siva-arm --resource-group sivanew
                sleep 150
                echo "congigured the details"
              #  Add the repo details in Deployment center 
                az webapp deployment source config --name azure-siva-arm --resource-group sivanew --repo-url https://github.com/boldbi/azure-arm-template.git --branch v6 --manual-integration   
              
        - task: AzureAppServiceManage@0
          inputs:
            azureSubscription: 'SF3362-BoldBI-DevOps-SivanesanSaravanan(bbceebb1-216e-46f8-82c1-500bdea55db4)'
            Action: 'Start Azure App Service'
            WebAppName: 'azure-siva-arm'
      - ${{ else }}:
        - script: echo "Azure package sync not triggered"