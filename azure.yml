# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
trigger:
  - none

pool:
  vmImage: ubuntu-latest

parameters:
  - name:  git_commit
    displayName: Git Package commit
    type: string
    values:
      - True
      - False
  - name: package_link
    displayName: Azure Package URL
    type: string

  - name: repository
    displayName: Repository-URL
    type: string
    values:
      - https://github.com/SivanesanSyncfusion/bi_and_reports_azure-arm-template.git

  - name: branch
    displayName: Branch
    type: string


variables:
- name: AzureUpgrade
  value: ${{parameters.azure_deployment_upgrade}}

- name: GitCommit
  value: ${{parameters.git_commit}}
steps:

        - task: Bash@3
          inputs:
            targetType: 'inline'
            script: |
              echo "$(pwd)"
              wget --no-check-certificate '${{parameters.package_link}}'
              unzip Bold*
              ls
                #GitHub credientials
              echo "$(pwd)"
              repository=$(echo '${{parameters.repository}}' | cut -c 19-)
              echo "$repository"
               # Check if the branch exists
              git_token_repo="https://$(Git_token)@github.com${repository}"
              echo "$git_token_repo"
              if git ls-remote --heads "$git_token_repo" '${{parameters.branch}}' | grep -q '${{parameters.branch}}'; then
                # If the branch exists, clone the repository and switch to the branch
                git clone -b '${{parameters.branch}}' "$git_token_repo" azure-boldbi
                cd azure-boldbi
                echo "$(pwd)"
              else
                # If the branch doesn't exist, create it, clone the repository and switch to the branch
                git clone "$git_token_repo" azure-boldbi
                cd azure-boldbi
                git checkout -b '${{parameters.branch}}'
              fi

              # Copy the files and folders to the cloned location
              #cp git.sh $folder
              echo "$(pwd)"
              cp -r /home/vsts/work/1/s/Bold*/* /home/vsts/work/1/s/azure-boldbi
              echo "$(pwd)"
              rm -r azure.yml
              rm -r ClientLibraries/install-optional.libs.ps1
              git config user.email $(Git_user_email)
              git config user.name $(Git_User_Name)

              # Commit and push the changes
              git add .
              git commit -m "Latest packages update"
              git push origin '${{parameters.branch}}'
              ls